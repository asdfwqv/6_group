상속
-기본 클래스: 상속해주는 클래스, 부모 클래스
-파생 클래스: 상속받는 클래스, 자식 클래스 {기본 클래스의 속성과 기능을 물려받음.}

---------------------------------------------------------------------------------------------------------
상속의 목적과 장점
1. 기본 클래스의 기능을 물려받아 파생 클래스를 간결하게 작성할 수 있다.
2. 상속은 클래스들의 구조적 관계 파악에 용이하다.
3.클래스 재사용과 확장을 통한 소프트웨어 생산성 향상

---------------------------------------------------------------------------------------------------------
기능이 중복된 4개의 클래스 상속 관계로 간결화 하기
1) 말하기, 먹기, 걷기, 잠자기, 공부하기
2) 말하기, 먹기, 걷기, 잠자기, 공부하기, 일하기
3) 말하기, 먹기, 걷기, 잠자기, 연구하기
4) 말하기, 먹기, 걷기, 잠자기, 연구하기 ,가르치기

4가지 클래스를 상속단위로 정리하려면 4개의 클래스 모두 가지고 있는 기능은
all) 말하기, 먹기, 걷기, 잠자기
1), 2), 3), 4)는 all)의 기능을 상속받는다.

1)이 가지고 있는 기능은 2)가 모두 가지고 있기 때문에 
2)는 1)의 기능을 상속받고 있다

3)이 가지고 있는 기능은 4)가 모두 가지고 있기 때문에
4)는 3)의 기능을 상속받고 있다.

---------------------------------------------------------------------------------------------------------
상속 선언: class 파생클래스명 : 상속 접근 지정 기본 클래스명

---------------------------------------------------------------------------------------------------------
업 캐스팅: 파생 클래스 포인터가 기본 클래스 포인터에 치환되는 것.
다운 캐스팅: 기본 클래스의 포인터가 파생 클래스의 포인터에 치환되는것

---------------------------------------------------------------------------------------------------------
접근 지정자
-private 멤버	
  : 선언된 클래스 내에서만 접근 가능, 파생 클래스에서도 기본 클래스의 private 멤버 직접 접근 불가
-public 멤버
   : 모든 외부 함수에 접근 허용, 파생클래스에서 기본클래스의 public 멤버 접근 가능
-protected 멤버
   : 선언된 클래스에서 접근 가능, 파생 클래스에서만 접근 허용	

---------------------------------------------------------------------------------------------------------
상속과 생성자, 소멸자
- 파생 클래스의 객체가 생성될 때 파생 클래스의 생성자와 기본 클래스의 생성자가 모두 실행된다.
- 파생 클래스의 생성자와 기본 클래스의 생성자 중 기본 클래스의 생성자가 먼저 실행된 다음 파생 클래스의 생성자가 실행된다.
- 소멸자는 생성자의 반대 순서.

---------------------------------------------------------------------------------------------------------
파생 클래스의 생성자에서 기본 클래스의 기본 생성자 호출을 하기 때문에 기본 클래스에 기본 생성자가 없을 경우 파생 생성자에서 기본 생성자 호출코드를 삽입하거나,  명시적으로 기본클래스의 생성자를 선택해야한다.

---------------------------------------------------------------------------------------------------------
상속 지정
- 상속 선언시 public, private, protected 중 한가지를 지정
- 기본 클래스의 멤버의 접근 속성을 어떻게 계승할지 지정.

---------------------------------------------------------------------------------------------------------
다중 상속 선언
-파생 클래스에서 여러개의 기본 클래스의 속성을 상속 받는 것.

다중 상속의 문제점
- 기본 클래스 멤버의 중복 상속

---------------------------------------------------------------------------------------------------------
가상 상속
- 다중 상속의 문제점인 기본 클래스 멤버의 중복 상속을 해결.
- 파생 클래스의 선언문에서 기본 클래스 앞에 virtual로 선언
-파생 클래스의 객체가 생성될 때 기본 클래스의 멤버는 오직 한번만 생성

---------------------------------------------------------------------------------------------------------
###정리###

파생 클래스의 생성자는 기본 클래스의 기본 생성자를 호출 하도록 컴파일 된 것이 디폴트 값이기 때문에 기본 클래스의 어떤 생성자를 호출 할 것인지 잘 생각 해서 호출 해야할 것 같다. 

파생 클래스의 선언문에서 기본 클래스 앞에 virtual을 선언할때 virtual만 선언하는게 아닌 접근 속성도 지정해야 하는것이 당연한 일 이지만 두개의 선언을 하는 것 이기 때문에 헷갈릴 수도 있을 것 같다.

 
